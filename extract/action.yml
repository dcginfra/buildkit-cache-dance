name: Extract Cache
description: "Extracts the cached data from the docker build(x|kit) process"
inputs:
  cache-source:
    default: cache
    description: "Where the cache is stored in the calling workspace. Default: `cache`"
  scratch-dir:
    default: scratch
    description: "Where the action is stores some temporary files for its processing. Default: `scratch`"
runs:
  using: composite
  steps:
    - name: Prepare Timestamp for Layer Cache Busting
      shell: bash
      run: |
        date --iso=ns | tee ${{ inputs.scratch-dir }}/buildstamp

    - name: Prepare Dancefile to Access Caches
      shell: bash
      run: |
        cat > ${{ inputs.scratch-dir }}/Dancefile.extract <<EOF
        FROM peakcom/s5cmd:v2.1.0
        RUN apk add tree
        COPY buildstamp buildstamp
        RUN --mount=type=cache,sharing=shared,id=cargo_registry_index,target=/cache-mounts/cargo_registry_index \
            --mount=type=cache,sharing=shared,id=cargo_registry_cache,target=/cache-mounts/cargo_registry_cache \
            --mount=type=cache,sharing=shared,id=cargo_git,target=/cache-mounts/cargo_git \
            --mount=type=cache,sharing=shared,id=target,target=/cache-mounts/target \
            --mount=type=cache,sharing=shared,id=wasm_dpp_target,target=/cache-mounts/wasm_dpp_target \ 
            --mount=type=cache,sharing=shared,id=unplugged,target=/cache-mounts/unplugged \
            tree -L 4 /cache-mounts/unplugged && \
            /s5cmd --log debug --stat sync '/cache-mounts/*' s3://platform-runner-cache/cache-mounts/ && \
            tree -L 4 /cache-mounts/unplugged
        EOF
        cat ${{ inputs.scratch-dir }}/Dancefile.extract

    - name: Extract Data into buildx context
      shell: bash
      run: |
        docker buildx build -f ${{ inputs.scratch-dir }}/Dancefile.extract ${{ inputs.scratch-dir }}
