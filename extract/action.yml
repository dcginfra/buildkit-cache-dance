name: Extract Cache
description: "Extracts the cached data from the docker build(x|kit) process"
inputs:
  cache-source:
    default: cache
    description: "Where the cache is stored in the calling workspace. Default: `cache`"
  scratch-dir:
    default: scratch
    description: "Where the action is stores some temporary files for its processing. Default: `scratch`"
  platforms:
    description: Docker image platform to build
    default: amd64

runs:
  using: composite
  steps:
    - name: Prepare Timestamp for Layer Cache Busting
      shell: bash
      run: |
        date --iso=ns | tee ${{ inputs.scratch-dir }}/buildstamp

    - name: Format platforms for docker
      uses: actions/github-script@v6
      id: platforms
      with:
        result-encoding: string
        script: |
           return '${{inputs.platforms}}'
              .split(',')
              .map((platform) => `linux/${platform.trim()}`)
              .join(',')

    - name: Echo platforms input
      shell: bash
      run: |
        set -x
        echo ${{ inputs.platforms }}

    - name: Echo platforms step
      shell: bash
      run: |
        set -x
        echo ${{ steps.platforms.outputs.result }}

    - name: Prepare Dancefile to Access Caches
      shell: bash
      run: |
        cat > ${{ inputs.scratch-dir }}/Dancefile.extract <<EOF
        FROM peakcom/s5cmd:v2.1.0
        ARG TARGETARCH
        RUN echo $TARGETARCH
        COPY buildstamp buildstamp
        RUN --mount=type=cache,sharing=shared,id=cargo_registry_index,target=/cache-mounts/cargo_registry_index \
            --mount=type=cache,sharing=shared,id=cargo_registry_cache,target=/cache-mounts/cargo_registry_cache \
            --mount=type=cache,sharing=shared,id=cargo_git,target=/cache-mounts/cargo_git \
            --mount=type=cache,sharing=shared,id=target_$TARGETARCH,target=/cache-mounts/target \
            --mount=type=cache,sharing=shared,id=target_wasm,target=/cache-mounts/target_wasm \ 
            --mount=type=cache,sharing=shared,id=unplugged_$TARGETARCH,target=/cache-mounts/unplugged \
            /s5cmd --stat sync --no-follow-symlinks '/cache-mounts/*' s3://platform-runner-cache/cache-mounts/
        EOF
        cat ${{ inputs.scratch-dir }}/Dancefile.extract

    - name: Extract Data into buildx context
      shell: bash
      run: |
        docker buildx build \
          --platform ${{ steps.platforms.outputs.result }} \
          --file ${{ inputs.scratch-dir }}/Dancefile.extract \
          ${{ inputs.scratch-dir }}
