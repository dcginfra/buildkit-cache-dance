name: Inject Cache
description: "Injects the cached data into the docker build(x|kit) process"
inputs:
  cache-source:
    default: cache
    description: "Where the cache is stored in the calling workspace. Default: `cache`"
  scratch-dir:
    default: scratch
    description: "Where the action is stores some temporary files for its processing. Default: `scratch`"
runs:
  using: composite
  steps:
    - name: Clean Directories
      shell: bash
      run: |
        rm -Rf ${{ inputs.scratch-dir }} && mkdir -p ${{ inputs.scratch-dir }} ${{ inputs.cache-source }}
    - name: Prepare Timestamp for Layer Cache Busting
      shell: bash
      run: |
        date --iso=ns | tee ${{ inputs.cache-source }}/buildstamp
    - name: Prepare Dancefile to Access Caches
      shell: bash
      run: |
        cat > ${{ inputs.scratch-dir }}/Dancefile.inject <<EOF
        FROM peakcom/s5cmd:v2.0.0
        COPY buildstamp buildstamp
        RUN --mount=type=cache,sharing=shared,id=cargo_registry,target=/usr/local/cargo/registry \
            --mount=type=cache,sharing=shared,id=cargo_git,target=/usr/local/cargo/git \
            --mount=type=cache,sharing=shared,id=deps_target,target=/platform/target/deps \
            --mount=type=cache,sharing=shared,id=drive_target,target=/platform/target/drive \
            --mount=type=bind,source=.,target=/var/dance-cache \
            echo "s5cmd:" && s5cmd version && \
            echo "cache size:" && du -hd2 /var/dance-cache && \
            cp -a /var/dance-cache/registry/. /usr/local/cargo/registry || true && \
            cp -a /var/dance-cache/git/. /usr/local/cargo/git || true && \
            cp -a /var/dance-cache/target/. /platform/target || true && \
            chmod 777 -R /usr/local/cargo/registry || true && \
            chmod 777 -R /usr/local/cargo/git || true && \
            chmod 777 -R /platform/target || true
        EOF
        cat ${{ inputs.scratch-dir }}/Dancefile.inject
    - name: Inject Data into buildx context
      shell: bash
      run: |
        docker buildx build -f ${{ inputs.scratch-dir }}/Dancefile.inject --tag dance:inject ${{ inputs.cache-source }}
    - name: Clean Directories
      shell: bash
      run: |
        sudo rm -rf ${{ inputs.cache-source }}
