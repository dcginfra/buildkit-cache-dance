name: Inject Cache
description: "Injects the cached data into the docker build(x|kit) process"
inputs:
  cache-source:
    default: cache
    description: "Where the cache is stored in the calling workspace. Default: `cache`"
  scratch-dir:
    default: scratch
    description: "Where the action is stores some temporary files for its processing. Default: `scratch`"
runs:
  using: composite
  steps:
    - name: Clean Directories
      shell: bash
      run: |
        rm -Rf ${{ inputs.scratch-dir }} && mkdir -p ${{ inputs.scratch-dir }} ${{ inputs.cache-source }}

    - name: Prepare Timestamp for Layer Cache Busting
      shell: bash
      run: |
        date --iso=ns | tee ${{ inputs.cache-source }}/buildstamp

    - name: Prepare Dancefile to Access Caches
      shell: bash
      run: |
        cat > ${{ inputs.scratch-dir }}/Dancefile.inject <<EOF
        FROM peakcom/s5cmd:v2.0.0
        RUN apk add tree
        COPY buildstamp buildstamp
        RUN --mount=type=cache,sharing=shared,id=cargo_registry_index,target=/usr/local/cargo/registry/index \
            --mount=type=cache,sharing=shared,id=cargo_registry_cache,target=/usr/local/cargo/registry/cache \
            --mount=type=cache,sharing=shared,id=cargo_git,target=/usr/local/cargo/git/db \
            --mount=type=cache,sharing=shared,id=target,target=/platform/target \
            --mount=type=cache,sharing=shared,id=unplugged,target=/tmp/unplugged \
            tree -L 4 -apu /tmp/unplugged && \
            /s5cmd sync s3://platform-runner-cache/cache-mounts/registry/index/* /usr/local/cargo/registry/index > /dev/null & \
            /s5cmd sync s3://platform-runner-cache/cache-mounts/registry/cache/* /usr/local/cargo/registry/cache > /dev/null & \
            /s5cmd sync s3://platform-runner-cache/cache-mounts/git/db/* /usr/local/cargo/git/db > /dev/null & \
            /s5cmd sync s3://platform-runner-cache/cache-mounts/target/* /platform/target > /dev/null & \
            /s5cmd sync s3://platform-runner-cache/cache-mounts/unplugged/* /tmp/unplugged & \
            wait && \
            tree -L 4 -apu /tmp/unplugged && \
            chmod 777 -R /usr/local/cargo/registry/index/ || true && \
            chmod 777 -R /usr/local/cargo/registry/cache/ || true && \
            chmod 777 -R /usr/local/cargo/git/db/ || true && \
            chmod 777 -R /platform/target || true && \
            find /usr/local/cargo/registry/index/ \
                /usr/local/cargo/registry/cache/ \
                /usr/local/cargo/git/db/ \
                /platform/target/ \
                -exec touch -d `date +%Y.%m.%d-%H:%M:%S -d@"$((\`date +%s\`-2))"` {} +
        EOF
        cat ${{ inputs.scratch-dir }}/Dancefile.inject

    - name: Inject Data into buildx context
      shell: bash
      run: |
        docker buildx build -f ${{ inputs.scratch-dir }}/Dancefile.inject ${{ inputs.cache-source }}

    - name: Clean Directories
      shell: bash
      run: |
        sudo rm -rf ${{ inputs.cache-source }}
